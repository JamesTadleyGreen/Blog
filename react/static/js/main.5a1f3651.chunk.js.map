{"version":3,"sources":["BarChart.js","App.js","reportWebVitals.js","index.js"],"names":["BarChart","this","drawChart","data","props","svg","d3","append","attr","width","height","h","selectAll","enter","d","i","id","Component","App","state","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAoCeA,E,uKA/BX,WACEC,KAAKC,c,uBAGP,WACI,IAAMC,EAAOF,KAAKG,MAAMD,KAElBE,EAAMC,IAAU,QACrBC,OAAO,OACPC,KAAK,QAASP,KAAKG,MAAMK,OACzBD,KAAK,SAAUP,KAAKG,MAAMM,QAErBC,EAAIV,KAAKG,MAAMM,OAErBL,EAAIO,UAAU,QACXT,KAAKA,GACLU,QACAN,OAAO,QACPC,KAAK,KAAK,SAACM,EAAGC,GAAJ,OAAc,GAAJA,KACpBP,KAAK,KAAK,SAACM,EAAGC,GAAJ,OAAUJ,EAAI,GAAKG,KAC7BN,KAAK,QAAS,IACdA,KAAK,UAAU,SAACM,EAAGC,GAAJ,OAAc,GAAJD,KACzBN,KAAK,OAAQ,W,oBAGpB,WACI,OAAO,qBAAKQ,GAAI,IAAMf,KAAKG,MAAMY,S,GA5BlBC,aCkBRC,E,4MAhBbC,MAAQ,CACNhB,KAAM,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,IACvBM,MAAO,IACPC,OAAQ,IACRM,GAAI,a,4CAGN,WACE,OACE,qBAAKI,UAAU,MAAf,SACE,cAAC,EAAD,CAAUjB,KAAMF,KAAKkB,MAAMhB,KAAMM,MAAOR,KAAKkB,MAAMV,MAAOC,OAAQT,KAAKkB,MAAMT,e,GAXnEO,aCQHI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5a1f3651.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nclass BarChart extends Component {\r\n    \r\n    componentDidMount() {\r\n      this.drawChart();\r\n    }\r\n\r\n    drawChart() {\r\n        const data = this.props.data;\r\n        \r\n        const svg = d3.select(\"body\")\r\n        .append(\"svg\")\r\n        .attr(\"width\", this.props.width)\r\n        .attr(\"height\", this.props.height);\r\n        \r\n        const h = this.props.height;            \r\n        \r\n        svg.selectAll(\"rect\")\r\n          .data(data)\r\n          .enter()\r\n          .append(\"rect\")\r\n          .attr(\"x\", (d, i) => i * 70)\r\n          .attr(\"y\", (d, i) => h - 10 * d)\r\n          .attr(\"width\", 65)\r\n          .attr(\"height\", (d, i) => d * 10)\r\n          .attr(\"fill\", \"green\")\r\n    }\r\n    \r\n    render(){\r\n        return <div id={\"#\" + this.props.id}></div>\r\n    }\r\n\r\n}\r\n\r\nexport default BarChart;","import './App.css';\nimport BarChart from './BarChart';\nimport React, {Component} from 'react';\n\nclass App extends Component{\n  state = {\n    data: [12, 5, 6, 6, 9, 10],\n    width: 700,\n    height: 500,\n    id: 'bar-chart'\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <BarChart data={this.state.data} width={this.state.width} height={this.state.height}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}